{"version":3,"file":"static/js/958.b9c809a0.chunk.js","mappings":"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","sources":["pages/ListPictures/LazyImage.jsx","pages/ListPictures/ListPictures.jsx","../node_modules/react-intersection-observer/src/InView.tsx"],"sourcesContent":["import React from 'react';\nimport { useInView } from 'react-intersection-observer';\n\nconst LazyImage = ({ src, alt, style }) => {\n  const { ref, inView } = useInView({\n    triggerOnce: true,\n    rootMargin: '150px',\n  });\n\n  return (\n    <div ref={ref} style={{ minHeight: '200px', ...style }}>\n      {inView ? (\n        <img\n          src={src}\n          alt={alt}\n          loading=\"lazy\"\n          style={{ width: '100%', display: 'block' }}\n        />\n      ) : (\n        <div\n          style={{ backgroundColor: '#eee', height: '200px', width: '100%' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LazyImage;\n","import {\n  AboutOrder,\n  Li,\n  Ul,\n  WrapPicture,\n} from 'components/Gallery/Gallery.styled';\nimport { CommonButton } from 'components/common/commonButton/button';\nimport { DefaultComponent } from 'components/common/default/defaultComponent';\nimport { memo, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useLocation } from 'react-router-dom';\nimport { S3_URL } from 'service/basicUrl';\nimport { getAllPictures, getPlacePictures } from 'service/gallertService';\nimport {\n  AllAndStockWords,\n  Input,\n  LabPlaces,\n  LiPlaces,\n  NavLinkButton,\n  NavPlaces,\n  PlacesContent,\n  PlacesInput,\n  TextPlace,\n  UlPlaces,\n  WrapCheckBlok,\n  WrapCheckboxes,\n  WrapPlaces,\n} from './ListPictures.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { WrapDots } from 'components/PictureInfo/PictureInfo.styled';\nimport { TfiArrowUp } from 'react-icons/tfi';\nimport { Button } from 'components/common/commonButton/button.styled';\nimport { useFeatureStore } from 'components/Features/Features/store';\nimport { useMedia } from 'react-use';\nimport LazyImage from './LazyImage';\n\nconst ListPictures = memo(() => {\n  const [pictures, setPicures] = useState({});\n  const [inStock, setInStock] = useState({});\n  const [selectedItem, setSelectedItem] = useState('Всі');\n  const [loading, setLoading] = useState(false);\n  const [scroll, setScroll] = useState(0);\n\n  const location = useLocation();\n  const [t] = useTranslation();\n  const refTop = useFeatureStore(state => state.refTop);\n  const refTopMob = useFeatureStore(state => state.refTopMob);\n  const isMobile = useMedia('(max-width: 541px)');\n  const isTabletM = useMedia('(max-width: 721px)');\n  const refKey = useFeatureStore(state => state.refKey);\n  const setRefKey = useFeatureStore(state => state.setRefKey);\n\n  useEffect(() => {\n    setLoading(true);\n    getAllPictures()\n      .then(res => setPicures(res))\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    const handleScroll = () => setScroll(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  useEffect(() => {\n    if (refKey && Object.values(pictures).length !== 0) {\n      const refId = Object.values(pictures).find(el => el._id === refKey);\n      const mainRoot = document.getElementById(refId._id);\n      mainRoot.scrollIntoView({ offset: -50 });\n      setRefKey(null);\n    }\n  }, [pictures, refKey, setRefKey]);\n\n  const onChangeHandlerInStock = event => {\n    setSelectedItem(event.target.name);\n    findInStockPict();\n  };\n\n  const onChangeHandler = event => {\n    setSelectedItem(event.target.name);\n  };\n\n  const places = [\n    t('gallaryPage.listPictures.livingRoom'),\n    t('gallaryPage.listPictures.kitchen'),\n    t('gallaryPage.listPictures.bedroom'),\n    t('gallaryPage.listPictures.childrenRoom'),\n    t('gallaryPage.listPictures.office'),\n  ];\n\n  const findInStockPict = () => {\n    let inStockPict = Object.values(pictures).filter(\n      item => item.inStock === 'так'\n    );\n    setInStock(inStockPict);\n  };\n\n  const getPicturesByPlaces = place => {\n    setPicures({});\n    setSelectedItem('Всі');\n    setLoading(true);\n    getPlacePictures(place)\n      .then(res => setPicures(res))\n      .finally(() => setLoading(false));\n  };\n\n  const getPictures = event => {\n    if (event.target.checked === false) {\n      setSelectedItem('Всі');\n      setLoading(true);\n      getAllPictures()\n        .then(res => setPicures(res))\n        .finally(() => setLoading(false));\n    }\n  };\n\n  if (!pictures || !inStock) {\n    return (\n      <>\n        <NavLinkButton to={'/painting'}>\n          <CommonButton text={t('button.back')} />\n        </NavLinkButton>\n        <DefaultComponent>\n          <ThreeDots />\n          <p>{t('defoultText')} </p>\n        </DefaultComponent>\n      </>\n    );\n  }\n\n  const topButton = {\n    position: 'fixed',\n    bottom: '34px',\n    right: '34px',\n    zIndex: '5',\n    backgroundColor: 'purple',\n    borderColor: 'transparent',\n  };\n  const topButtonMob = {\n    position: 'fixed',\n    bottom: '24px',\n    right: '24px',\n    zIndex: '5',\n    backgroundColor: 'purple',\n    borderColor: 'transparent',\n  };\n\n  return (\n    <>\n      <NavLinkButton to={'/painting'}>\n        <CommonButton text={t('button.back')} />\n      </NavLinkButton>\n\n      <AboutOrder>{t('gallaryPage.aboutOrder')}</AboutOrder>\n\n      {scroll > document.documentElement.clientHeight &&\n        (isMobile ? (\n          <Button\n            style={topButtonMob}\n            onClick={() =>\n              refTopMob.current.scrollIntoView({ behavior: 'smooth' })\n            }\n          >\n            <TfiArrowUp size={15} color=\"white\" />\n          </Button>\n        ) : (\n          <Button\n            style={isTabletM ? topButtonMob : topButton}\n            onClick={() =>\n              refTop.current.scrollIntoView({ behavior: 'smooth' })\n            }\n          >\n            <TfiArrowUp size={isTabletM ? 15 : 20} color=\"white\" />\n          </Button>\n        ))}\n\n      <WrapCheckboxes>\n        <WrapPlaces>\n          <NavPlaces>\n            <PlacesInput\n              id=\"menu-cb\"\n              type=\"checkbox\"\n              onChange={getPictures}\n            ></PlacesInput>\n            <LabPlaces htmlFor=\"menu-cb\">\n              {t('gallaryPage.listPictures.filters')}\n            </LabPlaces>\n            <PlacesContent>\n              <UlPlaces>\n                {places.map(place => (\n                  <LiPlaces key={place}>\n                    <TextPlace\n                      onClick={() => getPicturesByPlaces(place.toLowerCase())}\n                    >\n                      {place}\n                    </TextPlace>\n                  </LiPlaces>\n                ))}\n              </UlPlaces>\n            </PlacesContent>\n          </NavPlaces>\n        </WrapPlaces>\n\n        <WrapCheckBlok>\n          <label>\n            <Input\n              name=\"Всі\"\n              type=\"checkbox\"\n              onChange={onChangeHandler}\n              checked={selectedItem === 'Всі'}\n            />\n            <AllAndStockWords>\n              {t('gallaryPage.listPictures.all')}\n            </AllAndStockWords>\n          </label>\n          <label>\n            <Input\n              name=\"В наявності\"\n              type=\"checkbox\"\n              onChange={onChangeHandlerInStock}\n              checked={selectedItem === 'В наявності'}\n            />\n            <AllAndStockWords>\n              {t('gallaryPage.listPictures.inStock')}\n            </AllAndStockWords>\n          </label>\n        </WrapCheckBlok>\n      </WrapCheckboxes>\n\n      {loading && (\n        <WrapDots>\n          <ThreeDots />\n        </WrapDots>\n      )}\n      {selectedItem === 'Всі' && pictures.length === 0 && (\n        <DefaultComponent>\n          <p>{t('gallaryPage.listPictures.notForPlace')}</p>\n        </DefaultComponent>\n      )}\n      {selectedItem === 'Всі' ? (\n        <Ul>\n          {pictures &&\n            Object.values(pictures).map(({ title1, image, _id }) => (\n              <Li key={_id} id={_id}>\n                <Link\n                  to={`/painting/list_pictures/${_id}`}\n                  // state={{ from: location }} було до правок\n                  state={{ from: location, filter: selectedItem, refKey: _id }}\n                >\n                  <WrapPicture>\n                    {loading && (\n                      <WrapDots>\n                        <ThreeDots />\n                      </WrapDots>\n                    )}\n\n                    <LazyImage src={`${S3_URL}/${image}`} alt={title1} />\n                  </WrapPicture>\n                </Link>\n              </Li>\n            ))}\n        </Ul>\n      ) : Object.keys(inStock).length === 0 ? (\n        <DefaultComponent>\n          <p>{t('gallaryPage.listPictures.ifNotAvailable')}</p>\n        </DefaultComponent>\n      ) : (\n        <Ul>\n          {Object.values(inStock).map(({ title1, image, _id }) => (\n            <Li key={_id}>\n              <Link\n                to={`/painting/list_pictures/${_id}`}\n                // state={{ from: location }} було до правок\n                state={{ from: location, filter: selectedItem, refKey: _id }}\n              >\n                <WrapPicture>\n                  <LazyImage src={`${S3_URL}/${image}`} alt={title1} />\n                </WrapPicture>\n              </Link>\n            </Li>\n          ))}\n        </Ul>\n      )}\n    </>\n  );\n});\n\nexport default ListPictures;\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n"],"names":["src","alt","style","useInView","triggerOnce","rootMargin","ref","inView","minHeight","loading","width","display","backgroundColor","height","memo","useState","pictures","setPicures","inStock","setInStock","selectedItem","setSelectedItem","setLoading","scroll","setScroll","location","useLocation","useTranslation","t","refTop","useFeatureStore","state","refTopMob","isMobile","useMedia","isTabletM","refKey","setRefKey","useEffect","getAllPictures","then","res","finally","handleScroll","window","scrollY","addEventListener","removeEventListener","Object","values","length","refId","find","el","_id","document","getElementById","scrollIntoView","offset","places","findInStockPict","inStockPict","filter","item","to","text","topButtonMob","position","bottom","right","zIndex","borderColor","documentElement","clientHeight","onClick","current","behavior","size","color","id","type","onChange","event","target","checked","htmlFor","map","place","getPlacePictures","getPicturesByPlaces","toLowerCase","name","Ul","title1","image","Li","from","S3_URL","keys","React","observerMap","Map","root","WeakMap","rootId","unsupportedValue","defaultFallbackInView","getRootId","RootIds","get","set","toString","optionsToId","options","elements","thresholds","observer","IntersectionObserver","entries","forEach","key","instance","createObserver","entry","isIntersecting","some","intersectionRatio","threshold","trackVisibility","isVisible","callback","Array","isArray","sort","observe","element","fallbackInView","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","callbacks","push","unobserve","splice","indexOf","delete","disconnect","isPlainChildren","props","children","__publicField","node","skip","InView","setState","initialInView","has","setRef","delay","_unobserveCb","as","previousEntryTarget","handleChange"],"sourceRoot":""}