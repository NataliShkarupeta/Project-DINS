{"version":3,"file":"static/js/680.2ee77d6e.chunk.js","mappings":"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","sources":["components/ButtonHome/ButtonHome.styled.js","components/ButtonHome/ButtonHome.jsx","service/blogService.js","components/common/commonButton/button.styled.js","components/common/commonButton/button.jsx","pages/Blog/Blog.styled.js","components/common/modal/Modal.styled.js","components/common/modal/Modal.jsx","pages/Blog/normalizeDate.js","pages/Blog/Blog.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  :hover,\n  :focus {\n    cursor: pointer;\n    color: ${p => p.theme.colors.primary};\n    background-color: ${p => p.theme.colors.muted};\n    border-color: ${p => p.theme.colors.primary};\n    border-radius: ${p => p.theme.radii.normal};\n  }\n  transition: ${p => p.theme.transitions};\n`;","import { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from './ButtonHome.styled';\n\nexport const ButtonHome = () => {\n  const [t] = useTranslation();\n   const location = useLocation();\n\n  return (\n    <Button onClick={() => console.log(location)}>\n      {' '}\n      {t('button.buttonHome')}\n    </Button>\n  );\n};\n","import axios from 'axios';\n\nconst URL = 'http://localhost:3001/blog';\n\nexport const getAllPosts = async () => {\n  try {\n    const { data } = await axios.get(URL);\n\n    const sortDate = data.data.result.map(obj => ({\n      ...obj,\n      createdAt: Date.parse(obj.createdAt),\n    }));\n     console.log(sortDate);\n    const sortPosts = [...sortDate].sort((a, b) => b.createdAt - a.createdAt);\n    \n    return sortPosts;\n  } catch (error) {\n    return error.massage;\n  }\n};\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\ndisplay: flex;\npadding: ${p => p.theme.space[1]}px;\n:hover,\n  :focus {\n    cursor: pointer;\n    color: ${p => p.theme.colors.primary};\n    background-color: ${p => p.theme.colors.muted};\n    border-color: ${p => p.theme.colors.primary};\n    border-radius: ${p => p.theme.radii.normal};\n  }\n  transition: ${p => p.theme.transitions};\n\n`;","import { Button } from \"./button.styled\";\n\nexport const CommonButton = ({ text, clickHandler }) => {\n  return <Button onClick={clickHandler}>{text} </Button>;\n};\n","import styled from 'styled-components';\nimport img from '../../images/Depositphotos_211953146_XL (1).jpg';\n\nexport const BlockButton = styled.div`\n  position: absolute;\n  top: 465px;\n  right: 2%;\n  display: flex;\n  gap: 2px;\n`;\n\nexport const OnceButton = styled.span`\n  font-size: ${p => p.theme.fontSizes[0]}px;\n`;\n\nexport const WrapTitleAndDate = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Li = styled.li`\n  position: relative;\n  padding: ${p => p.theme.space[3]}px;\n  margin: ${p => p.theme.space[3]}px;\n\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.muted};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 0 0 0px rgba(0, 0, 0, 0.1), 0 3px 7px rgba(0, 0, 0, 0.3),\n    inset 0 1px rgba(255, 255, 255, 1), inset 0 -3px 2px rgba(0, 0, 0, 0);\n  height: ${p => p.theme.sizes[8]}px;\n  overflow-y: scroll;\n  background-image: linear-gradient(\n      to bottom,\n      rgba(255, 255, 0, 0.67),\n      rgba(83, 177, 226, 1)\n    ),\n    url('${img}');\n  background-size: cover;\n`;\n\nexport const Title = styled.h2`\n  font-family: ${p => p.theme.fonts.heading};\n  font-size: ${p => p.theme.fontSizes[3]}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Date = styled.span`\n  font-size: ${p => p.theme.fontSizes[0]}px;\n`;\n\nexport const Text = styled.span`\n  font-family: ${p => p.theme.fonts.heading};\n  font-size: ${p => p.theme.fontSizes[2]}px;\n  font-weight: ${p => p.theme.fontWeights.body};\n  line-height: ${p => p.theme.lineHeights.heading};\n`;\n","import styled from 'styled-components';\n\nexport const WrapButtonsModal = styled.div`\n display: flex;\n justify-content: center;\n gap: 10px;\n margin-top:20px;\n \n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.25);\n  z-index: 1200;\n`;\n\nexport const ModalContainer = styled.div`\n  max-width: 320px;\n  width: 320px;\n  height: 280px;\n  background-color: #ffffff;\n  padding: 20px;\n  /* text-align: center; */\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  gap: 15px;\n  align-items: center;\n  z-index: 20;\n`;\nexport const Button = styled.button`\n  padding: 5px;\n  width: 60px;\n`;\n\nexport const Title = styled.h3`\nfont-size: 25px;\ntext-align: center;\n`\nexport const Text = styled.p`\n  font-size: 20px;\n \n`;\n","import {\n  Overlay,\n  ModalContainer,\n  Title,\n  Text,\n  Button,\n  WrapButtonsModal,\n} from './Modal.styled';\n\nexport const Modal = ({\n  text,\n  descriptions,\n  textButton,\n  clickHandler,\n  // clickHandler1,\n  close,\n  textButton1,\n}) => {\n\n\n  const onClose = evt => {\n    if (evt.code === 'Escape' || evt.currentTarget === evt.target) {\n    close(false)\n    }\n  };\n\n  return (\n    <>\n      <Overlay onClick={onClose}>\n        <ModalContainer>\n          <Title>{text}</Title>\n          <form>\n            <Text>{descriptions}</Text>\n            <input />\n            <WrapButtonsModal>\n              <Button onClick={(e)=>{e.preventDefault()}}>{textButton}</Button>\n              <Button onClick={onClose}>{textButton1}</Button>\n            </WrapButtonsModal>\n          </form>\n        </ModalContainer>\n      </Overlay>\n    </>\n  );\n};\n","export const normalizedDate = date => {\n  const dateToString = new Date(date);\n  const day = dateToString.getDate().toString().padStart(2, '0');\n  const month = (dateToString.getMonth() + 1).toString().padStart(2, '0');\n  const year = dateToString.getFullYear().toString().slice(2);\n  return `${day}.${month}.${year}`;\n};\n","import { ButtonHome } from 'components/ButtonHome/ButtonHome';\nimport { memo, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllPosts } from 'service/blogService';\nimport { CommonButton } from 'components/common/commonButton/button';\nimport {\n  Li,\n  Title,\n  Date,\n  Text,\n  WrapTitleAndDate,\n  BlockButton,\n} from './Blog.styled';\nimport { RxPencil1, RxTrash, RxShare1 } from 'react-icons/rx';\nimport { Modal } from 'components/common/modal/Modal';\nimport { useTranslation } from 'react-i18next';\nimport { RxCheck, RxCross2 } from 'react-icons/rx';\nimport { normalizedDate } from './normalizeDate';\n\nconst BlogPage = memo(() => {\n  //  don't forgot create a button for delete && update && show one for repost post through additional the ask-password window //\n  const [posts, setPosts] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [t] = useTranslation();\n\n  useEffect(() => {\n    getAllPosts().then(res => setPosts(res));\n  }, []);\n\n\n  return (\n    <>\n      <Link to={'/'}>\n        <ButtonHome />\n      </Link>\n      {showModal && (\n        <Modal\n          text={t('pageBlog.modal.attention')}\n          descriptions={t('pageBlog.modal.key')}\n          textButton={<RxCheck />}\n          textButton1={<RxCross2 />}\n          close={setShowModal}\n          // clickHandler1={()=>setShowModal(false)}\n        />\n      )}\n      <ul>\n        {posts &&\n          posts.map(({ title, descriptions, _id, createdAt }) => (\n            <Li key={_id}>\n              <WrapTitleAndDate>\n                <Title>{title} </Title>\n                <Date>{normalizedDate(createdAt)}</Date>\n              </WrapTitleAndDate>\n              <Text>{descriptions}</Text>\n              <BlockButton>\n                <CommonButton\n                  text={<RxPencil1 />}\n                  clickHandler={() => {\n                    setShowModal(true);\n                  }}\n                ></CommonButton>\n                <CommonButton\n                  text={<RxTrash />}\n                  clickHandler={() => {\n                    setShowModal(true);\n                  }}\n                ></CommonButton>\n                <CommonButton text={<RxShare1 />}></CommonButton>\n              </BlockButton>\n            </Li>\n          ))}\n      </ul>\n    </>\n  );\n});\n\nexport default BlogPage;\n"],"names":["Button","styled","p","theme","space","colors","primary","muted","radii","normal","transitions","ButtonHome","useTranslation","t","location","useLocation","onClick","console","log","getAllPosts","axios","data","sortDate","result","map","obj","createdAt","Date","parse","sortPosts","sort","a","b","massage","CommonButton","text","clickHandler","BlockButton","WrapTitleAndDate","fontSizes","Li","borders","sizes","img","Title","fonts","heading","fontWeights","bold","Text","body","lineHeights","WrapButtonsModal","Overlay","ModalContainer","Modal","descriptions","textButton","close","textButton1","onClose","evt","code","currentTarget","target","e","preventDefault","normalizedDate","date","dateToString","day","getDate","toString","padStart","month","getMonth","year","getFullYear","slice","memo","useState","posts","setPosts","showModal","setShowModal","useEffect","then","res","to","B","title","_id"],"sourceRoot":""}