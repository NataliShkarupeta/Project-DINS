{"version":3,"file":"static/js/927.ea7d6a97.chunk.js","mappings":"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","sources":["pages/ListPictures/ListPictures.jsx"],"sourcesContent":["// import { useFeatureStore } from 'components/Features/Features/store';\nimport {\n  AboutOrder,\n  Li,\n  Ul,\n  WrapPicture,\n} from 'components/Gallery/Gallery.styled';\nimport { CommonButton } from 'components/common/commonButton/button';\nimport { DefaultComponent } from 'components/common/default/defaultComponent';\nimport { memo, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BASIC_URL } from 'service/basicUrl';\nimport { getAllPictures, getPlacePictures } from 'service/gallertService';\nimport {\n  AllAndStockWords,\n  Input,\n  LabPlaces,\n  LiPlaces,\n  NavLinkButton,\n  NavPlaces,\n  PlacesContent,\n  PlacesInput,\n  TextPlace,\n  UlPlaces,\n  WrapCheckBlok,\n  WrapCheckboxes,\n  WrapPlaces,\n} from './ListPictures.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { WrapDots } from 'components/PictureInfo/PictureInfo.styled';\n\nconst ListPictures = memo(() => {\n  const [pictures, setPicures] = useState({});\n  const [inStock, setInStock] = useState({});\n  const [selectedItem, setSelectedItem] = useState('Всі');\n  const [loading, setLoading] = useState(false);\n\n\n  const location = useLocation();\n  const [t] = useTranslation();\n\n  useEffect(() => {\n    setLoading(true);\n    getAllPictures()\n      .then(res => setPicures(res))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const onChangeHandlerInStock = event => {\n    setSelectedItem(event.target.name);\n    findInStockPict();\n  };\n\n  const onChangeHandler = event => {\n    setSelectedItem(event.target.name);\n  };\n\n  const places = [\n    t('gallaryPage.listPictures.livingRoom'),\n    t('gallaryPage.listPictures.kitchen'),\n    t('gallaryPage.listPictures.bedroom'),\n    t('gallaryPage.listPictures.childrenRoom'),\n    t('gallaryPage.listPictures.office'),\n  ];\n\n  const findInStockPict = () => {\n    let inStockPict = Object.values(pictures).filter(\n      item => item.inStock === 'так'\n    );\n    setInStock(inStockPict);\n  };\n\n  const getPicturesByPlaces = place => {\n    setPicures({});\n    setSelectedItem('Всі');\n    setLoading(true);\n    getPlacePictures(place)\n      .then(res => setPicures(res))\n      .finally(() => setLoading(false));\n  };\n\n  const getPictures = event => {\n    if (event.target.checked === false) {\n      setSelectedItem('Всі');\n      setLoading(true);\n      getAllPictures()\n        .then(res => setPicures(res))\n        .finally(() => setLoading(false));\n    }\n  };\n\n  if (!pictures || !inStock) {\n    return (\n      <>\n        <NavLinkButton to={'/painting'}>\n          <CommonButton text={t('button.back')} />\n        </NavLinkButton>\n        <DefaultComponent>\n          <ThreeDots />\n          <p>{t('defoultText')} </p>\n        </DefaultComponent>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <NavLinkButton to={'/painting'}>\n        <CommonButton text={t('button.back')} />\n      </NavLinkButton>\n\n      <AboutOrder>{t('gallaryPage.aboutOrder')}</AboutOrder>\n\n      <WrapCheckboxes>\n        <WrapPlaces>\n          <NavPlaces>\n            <PlacesInput\n              id=\"menu-cb\"\n              type=\"checkbox\"\n              onChange={getPictures}\n            ></PlacesInput>\n            <LabPlaces htmlFor=\"menu-cb\">\n              {t('gallaryPage.listPictures.filters')}\n            </LabPlaces>\n            <PlacesContent>\n              <UlPlaces>\n                {places.map(place => (\n                  <LiPlaces key={place}>\n                    <TextPlace\n                      onClick={() => getPicturesByPlaces(place.toLowerCase())}\n                    >\n                      {place}\n                    </TextPlace>\n                  </LiPlaces>\n                ))}\n              </UlPlaces>\n            </PlacesContent>\n            \n          </NavPlaces>\n        </WrapPlaces>\n\n        <WrapCheckBlok>\n          <label>\n            <Input\n              name=\"Всі\"\n              type=\"checkbox\"\n              onChange={onChangeHandler}\n              checked={selectedItem === 'Всі'}\n            />\n            <AllAndStockWords>\n              {t('gallaryPage.listPictures.all')}\n            </AllAndStockWords>\n          </label>\n          <label>\n            <Input\n              name=\"В наявності\"\n              type=\"checkbox\"\n              onChange={onChangeHandlerInStock}\n              checked={selectedItem === 'В наявності'}\n            />\n            <AllAndStockWords>\n              {t('gallaryPage.listPictures.inStock')}\n            </AllAndStockWords>\n          </label>\n        </WrapCheckBlok>\n      </WrapCheckboxes>\n\n      {loading && (\n        <WrapDots>\n          <ThreeDots />\n        </WrapDots>\n      )}\n      {selectedItem === 'Всі' && pictures.length === 0 && (\n        <DefaultComponent>\n          <p>{t('gallaryPage.listPictures.notForPlace')}</p>\n        </DefaultComponent>\n      )}\n      {selectedItem === 'Всі' ? (\n        <Ul>\n          {pictures &&\n            Object.values(pictures).map(({ title1, image, _id }) => (\n              <Li key={_id}>\n                <Link\n                  to={`/painting/list_pictures/${_id}`}\n                  state={{ from: location }}\n                >\n                  <WrapPicture>\n                    <img src={`${BASIC_URL}/${image}`} alt={title1} />\n                  </WrapPicture>\n                </Link>\n              </Li>\n            ))}\n        </Ul>\n      ) : Object.keys(inStock).length === 0 ? (\n        <DefaultComponent>\n          <p>{t('gallaryPage.listPictures.ifNotAvailable')}</p>\n        </DefaultComponent>\n      ) : (\n        <Ul>\n          {Object.values(inStock).map(({ title1, image, _id }) => (\n            <Li key={_id}>\n              <Link\n                to={`/painting/list_pictures/${_id}`}\n                state={{ from: location }}\n              >\n                <WrapPicture>\n                  <img src={`${BASIC_URL}/${image}`} alt={title1} />\n                </WrapPicture>\n              </Link>\n            </Li>\n          ))}\n        </Ul>\n      )}\n    </>\n  );\n});\n\nexport default ListPictures;\n"],"names":["ListPictures","memo","useState","pictures","setPicures","inStock","setInStock","selectedItem","setSelectedItem","loading","setLoading","location","useLocation","useTranslation","t","useEffect","getAllPictures","then","res","finally","places","findInStockPict","inStockPict","Object","values","filter","item","to","text","id","type","onChange","event","target","checked","htmlFor","map","place","onClick","getPlacePictures","getPicturesByPlaces","toLowerCase","name","length","Ul","title1","image","_id","Li","state","from","src","BASIC_URL","alt","keys"],"sourceRoot":""}