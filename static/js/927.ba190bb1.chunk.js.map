{"version":3,"file":"static/js/927.ba190bb1.chunk.js","mappings":"mPAsIA,UAtHqB,WAAO,IAAD,IACzB,GAA+BA,EAAAA,EAAAA,UAAS,CAAC,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,sBAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAYC,EAAAA,EAAAA,MAALC,GAAP,gBAMAC,EAAAA,EAAAA,YAAU,WACa,uBAAjBN,IACFO,EAAAA,EAAAA,MAAiBC,MAAK,SAAAC,GAAG,OAAIZ,EAAWY,EAAf,IAEN,kEAAjBT,IACFU,EAAAA,EAAAA,MAAqBF,MAAK,SAAAC,GAAG,OAAIV,EAAWU,EAAf,GAEhC,GAAE,CAACT,IAEJ,IAMe,IANTW,EAAkB,SAAAC,GACtBX,EAAgBW,EAAMC,OAAOC,KAC9B,EAID,OAFAC,QAAQC,IAAIpB,GACZmB,QAAQC,IAAIlB,GACPF,GAaH,iCACE,SAAC,KAAD,CAAeqB,GAAE,oBAAEf,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA3C,UACE,SAAC,IAAD,CAAcC,KAAMf,EAAE,oBAExB,SAAC,KAAD,UAAaA,EAAE,6BACf,UAAC,KAAD,YACE,8BACE,SAAC,KAAD,CACES,KAAK,qBACLO,KAAK,WACLC,SAAUX,EACVY,QAA0B,uBAAjBvB,KAEX,qDAEF,8BACE,SAAC,KAAD,CACEc,KAAK,gEACLO,KAAK,WACLC,SAAUX,EACVY,QAA0B,kEAAjBvB,KAEX,mGAGJ,+BACoB,kEAAjBA,IAAmCF,IAClC,SAAC,IAAD,WACE,0KAGHA,GAA2C,IAAhC0B,OAAOC,KAAK3B,GAAS4B,QAC/B,SAAC,EAAAC,GAAD,UACGH,OAAOI,OAAO9B,GAAS+B,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,IAAlB,OAC1B,SAAC,EAAAC,GAAD,WACE,SAAC,KAAD,CACEhB,GAAE,kCAA6Be,GAC/Bd,MAAO,CAAEC,KAAMjB,GAFjB,UAIE,SAAC,KAAD,WACE,gBAAKgC,IAAG,UAAKC,EAAAA,EAAL,YAAkBJ,GAASK,IAAKN,SANrCE,EADiB,OAc9B,8BACoC,IAAjCR,OAAOC,KAAK7B,GAAU8B,QACrB,SAAC,IAAD,WACE,sdAMF,SAAC,EAAAC,GAAD,UACG/B,GACC4B,OAAOI,OAAOhC,GAAUiC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,IAAlB,OAC1B,SAAC,EAAAC,GAAD,WACE,SAAC,KAAD,CACEhB,GAAE,kCAA6Be,GAC/Bd,MAAO,CAAEC,KAAMjB,GAFjB,UAIE,SAAC,KAAD,WACE,gBAAKgC,IAAG,UAAKC,EAAAA,EAAL,YAAkBJ,GAASK,IAAKN,SANrCE,EADiB,eArExC,iCACE,SAAC,KAAD,CAAef,GAAE,oBAAEf,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA3C,UACE,SAAC,IAAD,CAAcC,KAAMf,EAAE,oBAExB,SAAC,IAAD,WACE,4KAmFT,C","sources":["pages/ListPictures/ListPictures.jsx"],"sourcesContent":["// import { useFeatureStore } from 'components/Features/Features/store';\nimport {\n  AboutOrder,\n  Li,\n  Ul,\n  WrapPicture,\n} from 'components/Gallery/Gallery.styled';\nimport { CommonButton } from 'components/common/commonButton/button';\nimport { DefaultComponent } from 'components/common/default/defaultComponent';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BASIC_URL } from 'service/basicUrl';\nimport { getAllPictures, getInStockPictures } from 'service/gallertService';\nimport { Input, NavLinkButton, WrapCheckBlok } from './ListPictures.styled';\n\nconst ListPictures = () => {\n  const [pictures, setPicures] = useState({});\n  const [inStock, setInStock] = useState({});\n  const [selectedItem, setSelectedItem] = useState('Всі');\n  const location = useLocation();\n  const [t] = useTranslation();\n\n  // useEffect(() => {\n  //   getAllPictures().then(res => setPicures(res));\n  // }, []);\n\n  useEffect(() => {\n    if (selectedItem === 'Всі') {\n      getAllPictures().then(res => setPicures(res));\n    }\n    if (selectedItem === 'В наявності') {\n      getInStockPictures().then(res => setInStock(res));\n    }\n  }, [selectedItem]);\n\n  const onChangeHandler = event => {\n    setSelectedItem(event.target.name);\n  };\n\n  console.log(pictures);\n  console.log(inStock);\n  if (!pictures) {\n    return (\n      <>\n        <NavLinkButton to={location.state?.from ?? '/'}>\n          <CommonButton text={t('button.back')} />\n        </NavLinkButton>\n        <DefaultComponent>\n          <p> От халепа, щось пішло не так!</p>\n        </DefaultComponent>\n      </>\n    );\n  }\n  return (\n    <>\n      <NavLinkButton to={location.state?.from ?? '/'}>\n        <CommonButton text={t('button.back')} />\n      </NavLinkButton>\n      <AboutOrder>{t('gallaryPage.aboutOrder')}</AboutOrder>\n      <WrapCheckBlok>\n        <label>\n          <Input\n            name=\"Всі\"\n            type=\"checkbox\"\n            onChange={onChangeHandler}\n            checked={selectedItem === 'Всі'}\n          />\n          <span>Всі</span>\n        </label>\n        <label>\n          <Input\n            name=\"В наявності\"\n            type=\"checkbox\"\n            onChange={onChangeHandler}\n            checked={selectedItem === 'В наявності'}\n          />\n          <span>В наявності</span>\n        </label>\n      </WrapCheckBlok>\n      <section>\n        {selectedItem === 'В наявності' && !inStock && (\n          <DefaultComponent>\n            <p> От халепа, щось пішло не так!</p>\n          </DefaultComponent>\n        )}\n        {inStock && Object.keys(inStock).length !== 0 ? (\n          <Ul>\n            {Object.values(inStock).map(({ title1, image, _id }) => (\n              <Li key={_id}>\n                <Link\n                  to={`/painting/list_pictures/${_id}`}\n                  state={{ from: location }}\n                >\n                  <WrapPicture>\n                    <img src={`${BASIC_URL}/${image}`} alt={title1} />\n                  </WrapPicture>\n                </Link>\n              </Li>\n            ))}\n          </Ul>\n        ) : (\n          <>\n            {Object.keys(pictures).length === 0 ? (\n              <DefaultComponent>\n                <p>\n                  От халепа, щось пішло не так!Спробуйте перезавантажити\n                  сторінку або зайдіть пізніше.\n                </p>\n              </DefaultComponent>\n            ) : (\n              <Ul>\n                {pictures &&\n                  Object.values(pictures).map(({ title1, image, _id }) => (\n                    <Li key={_id}>\n                      <Link\n                        to={`/painting/list_pictures/${_id}`}\n                        state={{ from: location }}\n                      >\n                        <WrapPicture>\n                          <img src={`${BASIC_URL}/${image}`} alt={title1} />\n                        </WrapPicture>\n                      </Link>\n                    </Li>\n                  ))}\n              </Ul>\n            )}\n          </>\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default ListPictures;\n"],"names":["useState","pictures","setPicures","inStock","setInStock","selectedItem","setSelectedItem","location","useLocation","useTranslation","t","useEffect","getAllPictures","then","res","getInStockPictures","onChangeHandler","event","target","name","console","log","to","state","from","text","type","onChange","checked","Object","keys","length","Ul","values","map","title1","image","_id","Li","src","BASIC_URL","alt"],"sourceRoot":""}