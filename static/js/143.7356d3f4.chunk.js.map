{"version":3,"file":"static/js/143.7356d3f4.chunk.js","mappings":"2PAIaA,EAAc,mCAAG,mHAEHC,EAAAA,EAAAA,IAJL,kCAEQ,uBAElBC,EAFkB,EAElBA,KAEFC,EAAWD,EAAKA,KAAKE,OAAOC,KAAI,SAAAC,GAAG,yBACpCA,GADoC,IAEvCC,UAAWC,KAAKC,MAAMH,EAAIC,YAFa,IAKnCG,GAAe,OAAIP,GAAUQ,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEN,UAAYK,EAAEL,SAA1B,IATd,kBAWnBG,GAXmB,2DAanB,KAAMI,SAba,0DAAH,qD,SCmD3B,EAzCgB,WACd,OAA+BC,EAAAA,EAAAA,UAAS,CAAC,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAQA,OALAC,EAAAA,EAAAA,YAAU,WACRlB,IAAiBmB,MAAK,SAAAC,GAAG,OAAIH,EAAWG,EAAf,GAC1B,GAAE,IAEHC,QAAQC,IAAIN,IAEV,0BACE,eAAIO,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAAnC,SACGT,GACCU,OAAOC,OAAOX,GAAUX,KACtB,gBAAGuB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAoBtB,GAA/B,EAAwBuB,MAAxB,EAA+BvB,WAAWwB,EAA1C,EAA0CA,IAA1C,OACE,2BACE,wBAAKH,KACL,wBAAII,EAAAA,EAAAA,GAAezB,MACnB,uBAAIsB,KACJ,gBACEI,IAAI,+CACJC,IAAI,OANCH,EADX,OAyBX,C,uDCrDM,IAAMC,EAAiB,SAAAG,GAC5B,IAAMC,EAAe,IAAI5B,KAAK2B,GACxBE,EAAMD,EAAaE,UAAUC,WAAWC,SAAS,EAAG,KACpDC,GAASL,EAAaM,WAAa,GAAGH,WAAWC,SAAS,EAAG,KAC7DG,EAAOP,EAAaQ,cAAcL,WAAWM,MAAM,GACzD,MAAM,GAAN,OAAUR,EAAV,YAAiBI,EAAjB,YAA0BE,EAC3B,C","sources":["service/gallertService.js","components/Gallery/Gallery.jsx","pages/Blog/normalizeDate.js"],"sourcesContent":["import axios from 'axios';\n\nexport const URLPIC = 'http://localhost:3001/pictures';\n\nexport const getAllPictures = async () => {\n  try {\n    const { data } = await axios.get(URLPIC);\n\n    const sortDate = data.data.result.map(obj => ({\n      ...obj,\n      createdAt: Date.parse(obj.createdAt),\n    }));\n    // console.log(sortDate);\n    const sortPictures = [...sortDate].sort((a, b) => b.createdAt - a.createdAt);\n\n    return sortPictures;\n  } catch (error) {\n    return error.massage;\n  }\n};\n","import { normalizedDate } from 'pages/Blog/normalizeDate';\nimport { useEffect, useState } from 'react';\n// import { useTranslation } from 'react-i18next';\nimport {  getAllPictures } from 'service/gallertService';\n\n// const URLPIC = 'http://localhost:3001'\n// import { NavLink } from 'react-router-dom';\n// import {\n//   SectionMain,\n//   SectionSecond,\n//   H2,\n//   WrapSections,\n// } from '../SocialProject/SocialProject.styled';\n\nconst Gallary = () => {\n  const [pictures, setPicures] = useState({});\n  // const [t] = useTranslation();\n\n  useEffect(() => {\n    getAllPictures().then(res => setPicures(res));\n  }, []);\n\n  console.log(pictures);\n  return (\n    <div>\n      <ul style={{ display: 'flex', gap: '30px' }}>\n        {pictures &&\n          Object.values(pictures).map(\n            ({ title1, descriptions,image, createdAt, _id }) => (\n              <li key={_id}>\n                <h3>{title1}</h3>\n                <p>{normalizedDate(createdAt)}</p>\n                <p>{descriptions}</p>\n                <img\n                  src=\"http://localhost:3001/pictures/paintVase.jpg\"\n                  alt=\"\"\n                />\n              </li>\n            )\n          )}\n      </ul>\n    </div>\n    // <WrapSections>\n    //   <SectionMain>\n    //     <H2>{t('paintin_page.paintinTitle2')} </H2>\n    //   </SectionMain>\n    //   <SectionSecond>\n    //     <NavLink to={'/painting/social-project'}>\n    //       <p>{t('paintin_page.paintinTitle1')}</p>\n    //     </NavLink>\n    //   </SectionSecond>\n    // </WrapSections>\n  );\n};\n\nexport default Gallary;\n","export const normalizedDate = date => {\n  const dateToString = new Date(date);\n  const day = dateToString.getDate().toString().padStart(2, '0');\n  const month = (dateToString.getMonth() + 1).toString().padStart(2, '0');\n  const year = dateToString.getFullYear().toString().slice(2);\n  return `${day}.${month}.${year}`;\n};\n"],"names":["getAllPictures","axios","data","sortDate","result","map","obj","createdAt","Date","parse","sortPictures","sort","a","b","massage","useState","pictures","setPicures","useEffect","then","res","console","log","style","display","gap","Object","values","title1","descriptions","image","_id","normalizedDate","src","alt","date","dateToString","day","getDate","toString","padStart","month","getMonth","year","getFullYear","slice"],"sourceRoot":""}